// 1.let命令
// es6新增let命令，用来声明变量，用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效
	{
		let a = 10;
		var b = 1;
	}
	console.log(a); // Uncaught ReferenceError: a is not defined
	console.log(b); // 1

==================================================================================================
    // for循环测试let
	for(let a = 0;a < 5;a++){
		console.log(a); //0 1 2 3 4
	}
	console.log(a); //Uncaught ReferenceError: a is not defined
	
	// for循环测试 var
	for(var a = 0;a < 5;a++){
		console.log(a); //0 1 2 3 4
	}
		console.log(a); //5
	/*for循环的计数器，就很合适使用let命令。
	  上面代码中，计数器i只在for循环体内有效，在循环体外引用就会报错。*/

==================================================================================================
	//for循环是用var,则最后输出10，因为i是用var声明的，对全局范围内有效。console.log(i);中i指向全局
	var a = [];
	for (var i = 0; i < 10; i++) {
	  a[i] = function () {
	    console.log(i);
	  };
	}
	a[6](); // 10  
--------------------------------------------------------	
	//如果使用let，i只在块级作用域有效
	var a = [];
	for (let i = 0; i < 10; i++) {
	  a[i] = function () {
	    console.log(i);
	  };
	}
	a[6](); // 6
--------------------------------------------------------	
	//输出10次100；表示函数内部的变量i和循环变量i不在同一个作用域，各有单独的作用域
	for (let i = 0; i < 10; i++) {
	    let i = 100;
	    console.log(i);
	}
==================================================================================================
//ES6不存在变量提升
	//var声明会发生‘变量提升’现象  let一定要在声明之后是用
	// var 的情况
	console.log(foo); // 输出undefined
	var foo = 2;

	// let 的情况
	console.log(bar); // 报错ReferenceError
	let bar = 2;
==================================================================================================

